const express = require("express");
const router = express.Router();
const nodemailer = require("nodemailer");
require('dotenv').config()

const { ensureAuthenticated, isAdmin } = require("../config/authenticate");
const Issues = require("../models/Issues")

// fetching the posted issues
router.get("/", (req, res) => {

    // if a user is authenticated, data is fetched according to their department
    if (req.isAuthenticated() && req.user.admin == null) {
        Issues.aggregate([{ $match: { department: req.user.department } }]).then(issues => res.status(200).json({ issues: issues }))
            .catch(err => res.status(400).json({ error: err.message }));
    } else {
        Issues.find({}).then(issues => res.status(200).json({ issues: issues }))
            .catch(err => res.status(400).json({ error: err.message }));
    }
})

// posting new issues
router.post("/", (req, res) => {
    Issues.create(req.body).then(done => res.status(200).json({ status: "posted" }))
        .catch(err => res.status(400).json({ error: err.message }));

})

// rejection of issue by the resolver or deletion by the admin
router.put("/", ensureAuthenticated, (req, res) => {
    if (req.user.admin) {
        Issues.findByIdAndDelete(req.body.id).then(respose => res.status(200).json({ status: "deleted" }))
            .catch(err => res.status(400).json({ error: err.message }));
    } else {
        const mail_content = req.body.mail_content;
        const subject = req.body.subject;
        Issues.findByIdAndDelete(req.body.id).then(respose => {
                var transporter = nodemailer.createTransport({
                    host: "smtp.mailtrap.io",
                    port: 2525,
                    auth: {
                        user: process.env.USER, //generated by Mailtrap
                        pass: process.env.PASSWORD //generated by Mailtrap
                    }
                });
                transporter.sendMail({
                    from: req.user.email, // sender address
                    to: req.body.email, // list of receivers
                    subject: subject, // Subject line
                    text: `Reason for rejection: ${mail_content}` // plain text body // html body
                }, (err, info) => {
                    if (err) res.status(400).json({ error: err });
                    else res.status(200).json({ status: "rejected and mail sent!" })
                });
            })
            .catch(err => res.status(400).json({ error: err.message }));
    }
})



module.exports = router;