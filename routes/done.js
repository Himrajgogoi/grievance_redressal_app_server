const express = require("express");
const router = express.Router();
const nodemailer = require("nodemailer");
require('dotenv').config()

const { ensureAuthenticated, isAdmin } = require("../config/authenticate");

const Done = require("../models/Done")
const Accepted = require("../models/Accepted")

// fetching the done issues
router.get("/", (req, res) => {
    // if a user is authenticated, data is fetched according to their department
    if (req.isAuthenticated() && req.user.admin == null) {
        Done.aggregate([{ $match: { department: req.user.department } }]).then(issues => res.status(200).json({ done: issues }))
            .catch(err => res.status(400).json({ error: err.message }));
    } else {
        Done.find({}).then(issues => res.status(200).json({ done: issues }))
            .catch(err => res.status(400).json({ error: err.message }));
    }
})

// posting the done issue
router.post("/", ensureAuthenticated, (req, res) => {

    const mail_content = req.body.mail_content;
    const subject = req.body.subject;
    const id = req.body._id;

    delete req.body.mail_content;
    delete req.body.subject;
    delete req.body._id;
    delete req.body.__v;


    Accepted.findByIdAndDelete(id).then(done => {
        Done.create(req.body).then(doc => {
            var transporter = nodemailer.createTransport({
                host: "smtp.mailtrap.io",
                port: 2525,
                auth: {
                    user: process.env.USER, //generated by Mailtrap
                    pass: process.env.PASSWORD //generated by Mailtrap
                }
            });
            transporter.sendMail({
                from: req.user.email, // sender address
                to: req.body.email, // list of receivers
                subject: subject, // Subject line
                text: `${mail_content} | Time of completion: ${req.body.time_of_completion}` // plain text body // html body
            }, (err, info) => {
                if (err) res.status(400).json({ error: err });
                else res.status(200).json({ status: "task completed and mail sent!" })
            });
        }).catch(err => res.status(400).json({ error: err }))
    }).catch(err => res.status(400).json({ error: err }))

})

// deleting of issue by admin
router.put("/", isAdmin, (req, res) => {
    Done.findByIdAndDelete(req.body.id).then(respose => res.status(200).json({ status: "deleted" }))
        .catch(err => res.status(400).json({ error: err.message }));
})




module.exports = router;